import s from "react";
import { BlockTypes as u, richTextResolver as f } from "@storyblok/js";
function y(c, {
  isServerContext: t = !1
} = {}) {
  return function(e) {
    var o, n;
    const r = (o = e == null ? void 0 : e.attrs) == null ? void 0 : o.body;
    if (!Array.isArray(r) || r.length === 0)
      return [];
    const a = ((n = e.attrs) == null ? void 0 : n.id) || (t ? `fallback-key-${JSON.stringify(e.attrs)}` : void 0);
    return r.map(
      (i, m) => s.createElement(c, {
        blok: i,
        key: `${a}-${m}`
      })
    );
  };
}
function k(c, {
  isServerContext: t = !1
} = {}) {
  return function(e) {
    const r = y(c, { isServerContext: t }), { resolvers: a, ...o } = e, n = {
      ...t ? e : {},
      renderFn: s.createElement,
      textFn: (i) => s.createElement(s.Fragment, {
        key: Math.random().toString(36).substring(2, 15)
      }, i),
      resolvers: {
        [u.COMPONENT]: r,
        ...a
      },
      keyedResolvers: !0,
      ...t ? {} : o
    };
    return f(n);
  };
}
export {
  y as createComponentResolver,
  k as createRichTextHook
};
